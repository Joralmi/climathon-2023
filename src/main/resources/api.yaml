openapi: 3.0.1
info:
  title: SouthBound API
  version: '0.0.1'
#servers:
#  - url: http://localhost:8081
paths:
  /api/user/initiatives:
    post:
      description: Register your initiative
      tags:
        - Initiatives
      operationId: registerInitiative
      requestBody:
        description: Initiative
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericJson'
      responses:
        '201':
          description: Registered
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        default: { description: unexpected error }
    get:
      # One or many
      description: Retrieve your registered initiatives
      tags:
        - Initiatives
      operationId: getInitiative
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericJson'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        default: { description: unexpected error }
    delete:
      description: Delete initiative
      tags:
        - Initiatives
      operationId: deleteInitiative
      parameters:
        - name: id
          schema:
            type: string
          required: true
          in: query
      responses:
        '204':
          description:  Deleted
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        default: { description: unexpected error }
  /api/user/initiatives/{id}/vote:
    put:
      description: Update registered Thing Description
      tags:
        - Initiatives
      operationId: updateThing
      parameters:
        - name: id
          schema:
            type: string
          required: true
          in: path
      responses:
        '200':
          description: Vote casted
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
  /api/admin/initiatives/{id}/approve:
    put:
      description: Initiative Approved
      tags:
        - Admin
      operationId: approveInitiative
      parameters:
        - name: id
          schema:
            type: string
          required: true
          in: path
      responses:
        '200':
          description: Initiative approved
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
  /api/admin/initiatives/{id}/reject:
    put:
      description: Initiative Rejected
      tags:
        - Admin
      operationId: rejectInitiative
      parameters:
        - name: id
          schema:
            type: string
          required: true
          in: path
      responses:
        '200':
          description: Initiative rejected
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
components:
  securitySchemes: { }
  schemas:
    GenericJson:
      type: object
    ErrorObject:
      type: object
      properties:
        message:
          type: string
        stdErrorMsg:
          type: string
        logId:
          type: string
      example: # Sample object
        message: Object not found
        name: OID_IID_NOT_FOUND
  headers: { }
  responses:
    EmptyResponse:
      description: "Action executed successfully"
    PropertyResponse:
      description: "Response defined by adapter"
      content:
        application/json:
          schema: { }
    ErrorResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorObject'
  requestBodies: { }
tags: [
  { name: Initiatives },
  { name: Admin }
]
security: [ ]
